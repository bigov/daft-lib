//============================================================================
//
// file: bits.hpp
//
// Объявления элементов построения простренства
//
//============================================================================
#ifndef __BITS_HPP__
#define __BITS_HPP__
#include "lib.hpp"

namespace app {

enum SideName { FRONT, BACK, TOP, BOTTOM, LEFT, RIGHT };
struct side { glm::mat4x3 lay; glm::mat4x2 tex;	};

////////
// праллелограмм/куб
//
class Cube
{
	public:
		Cube() {};
		Cube(glm::vec3 point_position, short point_skin_id);
		~Cube() {};

		// шаг сетки текстур (высота карты: 1/0.125 = 8), это значит, что
		// плитки текстур размещены вертикально по 8 штук в колонке.
		glm::vec2 texture_mesh_step = glm::vec2(0.0f, 0.125f);

		// текстурная карта внешней поверхности
		glm::mat4x2 tExt = {
			0.000f, 0.000f,
			0.125f, 0.000f, 
			0.125f, 0.125f,
			0.000f, 0.125f
		};

		// текстурная карта внутренней поверхности
		glm::mat2x4 tInt = {
			0.000f, 0.00f,
			0.000f, 0.125f, 
			0.125f, 0.125f,
			0.125f, 0.000f
		};

		side front =
			{{-0.5f, -0.5f,  0.5f,  0.5f, -0.5f,  0.5f,
			0.5f,  0.5f,  0.5f, -0.5f,  0.5f,  0.5f}, tExt};
		side back	=
			{{-0.5f, -0.5f, -0.5f, -0.5f,  0.5f, -0.5f,
			0.5f,  0.5f, -0.5f,  0.5f, -0.5f, -0.5f}, tExt};
		side top =
			{{-0.5f,  0.5f,  0.5f,  0.5f,  0.5f,  0.5f,
			0.5f,  0.5f, -0.5f, -0.5f,  0.5f, -0.5f}, tExt};
		side bottom	=
			{{-0.5f, -0.5f, -0.5f,  0.5f, -0.5f, -0.5f,
			0.5f, -0.5f,  0.5f, -0.5f, -0.5f,  0.5f}, tExt};
		side left	=
			{{-0.5f, -0.5f, -0.5f, -0.5f, -0.5f,  0.5f,
			-0.5f,  0.5f,  0.5f, -0.5f,  0.5f, -0.5f}, tExt};
		side right =
			{{ 0.5f, -0.5f,  0.5f,  0.5f, -0.5f, -0.5f,
			0.5f,  0.5f, -0.5f,  0.5f,  0.5f,  0.5f}, tExt};
};

}
#endif
